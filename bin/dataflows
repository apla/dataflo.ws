#!/usr/bin/env node

var MODULE_NAME = 'dataflo.ws';
var INITIATOR_PATH = 'initiator';
var DEFAULT_REQUIRE = 'main';

var path = require('path');
var dataflows = require(MODULE_NAME);
var common = require(path.join(MODULE_NAME, 'common'));

var $global = common.$global;
var project = $global.project = common.getProject(); // used by initiators

project.on('ready', function () {
	var conf = project.config;

	// load local modules
	var requires = conf.requires || [ DEFAULT_REQUIRE ];
	if (!Object.is('Array', requires)) {
		requires = [ requires ];
	}
	requires.forEach(function (modName) {
		var mod = project.require(modName);

		// exporting everything to mainModule,
		// be careful about name conflicts
		if (mod) {
			Object.keys(mod).forEach(function (key) {
				$global.$mainModule.exports[key] = mod[key];
			});
		} else {
			console.warn('Module %s not found', modName);
		}
	});

	// now we can launch script;
	// script require postponed until project get prepared
	var scriptName = process.argv[2];

	var scriptClass;
	try {
		scriptClass = require (path.join (MODULE_NAME, 'script', scriptName));
	} catch (e) {
		try {
			scriptClass = require (project.root.fileIO ('bin', scriptName).path);
		} catch (e) {
			// console.log (e);
		}
	}
	
	if (!scriptClass) {
		// TODO: list all available scripts with descriptions
		console.error('sorry, there is no such script "%s"', scriptName);
		process.exit();
	}

	var scriptMethod = 'launch';

	if (typeof scriptClass.launchContext == 'function') {
		var launchContext = scriptClass.launchContext();
		if (launchContext.method) {
			scriptMethod = launchContext.method;
		}
	}

	if (typeof scriptClass[scriptMethod] == 'function') {
		scriptClass[scriptMethod](conf);
	} else {
		console.error(
			'missing method "%s" for script "%s"',
			scriptMethod, scriptName
		);
		process.exit();
	}
});
