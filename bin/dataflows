#!/usr/bin/env node

var MODULE_NAME = 'dataflo.ws';
var INITIATOR_PATH = 'initiator';
var DEFAULT_REQUIRE = 'main';

var path = require('path');
var common = require(MODULE_NAME + '/common');
var initiatorTypes = process.argv.slice(3);

var $global = common.$global;
$global.project = common.getProject(); // used by initiators

project.on('ready', function () {
	var conf = project.config;

	// load local modules
	var requires = conf.requires || [ DEFAULT_REQUIRE ];
	if (!Object.is('Array', requires)) {
		requires = [ requires ];
	}
	requires.forEach(function (modName) {
		var mod = project.require(modName);

		// exporting everything to mainModule,
		// be careful about name conflicts
		if (mod) {
			Object.keys(mod).forEach(function (key) {
				$global.$mainModule.exports[key] = mod[key];
			});
		} else {
			console.warn('Module %s not found', modName);
		}
	});

	// initiate all daemons if no arguments passed
	if (0 == initiatorTypes.length) {
		initiatorTypes = Object.keys(conf.initiator);
	}

	initiatorTypes.forEach(function (iName) {
		var initiator;
		try {
			initiator = require(
				path.join(MODULE_NAME, INITIATOR_PATH, iName
			));
		} catch (e) {
			// FIXME later: legacy initiator names
			var fixedIName = iName.replace(/d$/, '');
			if (fixedIName !== iName) {
				iName = fixedIName;
				console.warn(
'[DEPRECATED] Remove trailing "d" from "%s" in your initiator config', iName
				);

				try {
					initiator = require(
						path.join(MODULE_NAME, INITIATOR_PATH, iName)
					);
				} catch (ee) {
					throw e;
				}
			}
		}

		if ('function' == typeof initiator) {
			new initiator(conf.initiator[iName]);
		}
	});
});
