#!/usr/bin/env node

var MODULE_NAME = 'dataflo.ws';
var INITIATOR_PATH = 'initiator';
var DEFAULT_REQUIRE = 'main';

var path = require('path');
var dataflows = require(MODULE_NAME);
var common = require(MODULE_NAME + '/common');
var initiatorTypes = process.argv.slice(3);

var $global = common.$global;
$global.project = common.getProject(); // used by initiators

project.on('ready', function () {
	var conf = project.config;

	// load local modules
	var requires = conf.requires || [ DEFAULT_REQUIRE ];
	if (!Object.is('Array', requires)) {
		requires = [ requires ];
	}
	requires.forEach(function (modName) {
		var mod = project.require(modName);

		// exporting everything to mainModule,
		// be careful about name conflicts
		if (mod) {
			Object.keys(mod).forEach(function (key) {
				$global.$mainModule.exports[key] = mod[key];
			});
		} else {
			console.warn('Module %s not found', modName);
		}
	});

	// initiate all daemons if no arguments passed
	if (0 == initiatorTypes.length) {
		initiatorTypes = Object.keys(conf.initiator);
	}

	initiatorTypes.forEach(function (initiatorType) {
		
		var initiatorConf = conf.initiator[initiatorType];
		
		var initiatorClass = dataflows.getEntityClass('initiator', initiatorType);
		
		if ('function' == typeof initiatorClass) {
			new initiatorClass(initiatorConf);
		}
	});
});
