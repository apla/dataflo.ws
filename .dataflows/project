// json
{
	"daemon": {
		"test": {
			"initiator": [ "timer", "repl", "http" ]
		}
	},
	"templates": {
		"task": {
			"jsonParseAndMerge": {
				"$origin":    "{$global.JSON}",
				"$function":  "parse",
				"$mergeWith": "result"
			},
			"jsonParseAndSet": {
				"$origin":    "{$global.JSON}",
				"$function":  "parse",
				"$set":       "result"
			},
			"indexEqItem": {
				"$function": "throwUnlessEqual",
				"$args": [
					"[*every.index]",
					"[*every.item]"
				]
			}
		}
	},
	"initiator": {
		"callback": {

			"flows": {
				"test:ok:00-expansion": {
					"description": "basic 'every' task test",
					"tasks": [{
						"$function": "console.log",
						"$args": ["123"]
					}, {
						"$every": [2, 1, 2],
						"$tasks": [{
							"$function": "throwUnlessEqual",
							"$args": [
								"[*every.index]",
								"[*every.item]"
							]
						}]
					}]
				},
				"test:ok:01-origin": "<test/01-origin>",
				"test:fail:02-every": {
					"description": "basic 'every' task test",
					"tasks": [{
						"$every": [2, 1, 2],
						"$tasks": [{
							"$function": "throwUnlessEqual",
							"$args": [
								"[*every.index]",
								"[*every.item]"
							]
						}]
					}]
				},
				"test:ok:03-every": {
					"tasks": [{
						"$every": [0, 1, 2],
						"$tasks": [{
							"$function": "throwUnlessEqual",
							"$args": [
								"[*every.index]",
								"[*every.item]"
							]
						}]
					}]
				},
				"test:ok:03-every-object": {
					"tasks": [{
						"$every": {"a": "a", "b": "b", "c": "c"},
						"$tasks": [{
							"$function": "throwUnlessEqual",
							"$args": [
								"[*every.index]",
								"[*every.item]"
							],
							"$set": "numbers"
						}],
						"$collect": "numbers",
						"$set": "numbers"
					}, {
						"$function": "console.log",
						"$args": ["{$numbers}"]
					}]
				},
				"test:ok:04-template-merge": {
					"tasks": [{
						"$template": "jsonParseAndMerge",
						"$args": ["{\"a\":\"b\"}"]
					}, {
						"$template": "jsonParseAndMerge",
						"$args":     ["{\"c\":\"d\"}"],
						"require":   "{$result}"
					}, {
						"$function": "throwUnlessDefined",
						"$args": ["{$result.a}"]
					}, {
						"$function": "throwUnlessDefined",
						"$args": ["{$result.c}"]
					}]
				},
				"test:ok:05-template-set": {
					"tasks": [{
						"$template": "jsonParseAndSet",
						"$args": ["{\"a\":\"b\"}"]
					}, {
						"$template": "jsonParseAndSet",
						"$args":     ["{\"c\":\"d\"}"],
						"require":   "{$result}"
					}, {
						"$function": "throwNow",
						"$args": ["{$result.a}"]
					}, {
						"$function": "throwUnlessDefined",
						"$args": ["{$result.c}"]
					}]
				},
				"test:fail:06-template-set-important": {
					"tasks": [{
						"$template": "jsonParseAndSet",
						"$args": ["{\"a\":\"b\"}"]
					}, {
						"$template": "jsonParseAndSet",
						"$args":     ["{\"c\":\"d\"}"],
						"require":   "{$result}"
					}, {
						"$function": "throwNow",
						"// 1 ": "this task must fail because unsatisfied dependencies of result.a",
						"// 2 ": "which replaced by second JSON parse task. task state is skipped, but $important fail skipped task",
						"$args": ["{$result.a}"],
						"$important": true
					}, {
						"$function": "throwUnlessDefined",
						"$args": ["{$result.c}"]
					}]
				},
				"test:ok:07-every-template": {
					"tasks": [{
						"$every": [0, 1, 2],
						"$tasks": [{
							"$template": "indexEqItem"
						}]
					}]
				},
				"test:ok:08-every-double-expansion": {
					"tasks": [{
						"$every": [0, 1, 2],
						"$tasks": [{
							"$function": "throwUnlessEqual",
							"$args": [
								"[*every.index]",
								"[*every.item]"
							]
						}]
					}]
				},
				"xtest-http-initiator": {
					"tasks": [{
						"$class":"remoteResource",
						"$method": "toBuffer",
						"url": "http://127.0.0.1:51111/favicon.ico",
						"successCodes": "2xx",
						"$setOnFail": "favicon"
					}, {
						"$function": "console.log",
						"$args": [
							"favicon http response: want 404, got {$favicon.code}"
						],
						"$important": true
					}, {
						"$class":"remoteResource",
						"$method": "toBuffer",
						"url": "http://127.0.0.1:51111/index.html",
						"successCodes": "2xx",
						"$set": "indexPage"
					}, {
						"$function": "console.log",
						"$args": [
							"index page http response: want 200, got {$indexPage.code}"
						],
						"$important": true
					}, {
						"$class":"remoteResource",
						"$method": "toBuffer",
						"url": "http://127.0.0.1:51111/test/post",
						"bodyData": {
							"a": "b",
							"c": "d"
						},
						"successCodes": "2xx",
						"$set": "postObj"
					}, {
						"$function": "console.log",
						"$args": [
							"{$postObj.data}"
						],
						"$important": true
					}, {
						"$class":"remoteResource",
						"$method": "toBuffer",
						"url": "http://127.0.0.1:51111/test/redirect",
						"successCodes": "2xx",
						"$set": "redirectObj"
					}, {
						"$function": "console.print",
						"$args": [
							"{$redirectObj.data}"
						],
						"$important": true


					}]

				},
				"xtest-every-000": {
					"data": {
						"articleSelector":
							"//article/media[@media2article-type=\"photo\"]"
					},

					"tasks": [{
						"$function":"Array",
						"$args":[
							[ "data", "must", "flow" ],
							[ "in", "nested", "loops" ]
						],
						"$set":"testArr"
					}, {
						"$every":"{$testArr}",
						"$collect":"result1",
						"$tasks":[{
							"$every":"[*every.item]",
							"$collect":"result2",
							"$tasks":[{
								"$function":"toUpperCase",
								"$origin":"[*every.item]",
								"$set":"result2"
							},
							{
								"$function":"console.log",
								"$args":[
									"Running $every...",
									"index: [*every.index], item: [*result2]",
									"array: {*testArr}"
								]
							}],
							"$set":"result1"
						}],
						"$set":"mappedArr"
					}, {
						"$function":"Array.prototype.join",
						"$args":[" "],
						"$scope":"{$mappedArr}",
						"$set":"resultMessage"
					}]

				}

			}
		},
		"http": {
			"port": 51111,
			"static": {
				"root": "example"
			},

			"prepare": 	{
				"post": {
					"tasks": [{
						"$class": "post",
						"request": "{$request}",
						"$set": "request.body"
					}]
				}
			},
			"flows":[{
				"path": ""
			}, {
				"path": "^(\\w+)$",
				"prepare": ["post"],
				"tasks": [{
					"$function": "handleGet",
					"require":   "{$request.GET}"
				}],
				"presenter": "json"
			}, {
				"path": "test",
				"flows": [{
					"path": "redirect",
					"tasks":[{
						"$class": "redirect",
						"url": "/test/redirected",
						"output": "{$response}"
					}],
					"presenter": {
						"headers": {
							"Set-Cookie": "auth=123; expires=Fri Jan 31 2031 00:00:00 GMT; path=/; domain=127.0.0.1"
						}
					}
				}, {
					"path": "redirected",
					"presenter": {
						"type": "json",
						"vars": "{$request.headers}",
						"verbose": true
					}
				}, {
					"path": "post",
					"prepare": ["post"],
					"tasks": [{
						"$function": "handleGet",
						"require":   "{$request.POST}"
					}],
					"presenter": {
						"type": "json",
						"vars": "{$request.body}"
					}

				}]
			}]
		},
		"timer": {
			"flows": []
		}
	}
}
